<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.uploader</groupId>
  <artifactId>uploader</artifactId>
  <version>1.0</version>
  <name>Image Uploader</name>
  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.home>${env.JAVA_HOME}</java.home>
    <javac.source>1.7</javac.source>
    <javac.target>1.7</javac.target>

    <!-- javax Servlet 3.0, JavaServer Pages 2.1 -->
    <version.servlet.api>3.0.1</version.servlet.api><!-- java 6 -->
    <version.jsp.api>2.2</version.jsp.api><!--java 6 -->
    <version.jsp.jstl>1.2</version.jsp.jstl><!-- java 6/7 -->
    <version.taglibs>1.1.2</version.taglibs>

    <version.javax.validation>1.1.0.Final</version.javax.validation>

    <!-- Version update: 29 Jun 14 - Andreas -->
    <version.slf4j>1.7.7</version.slf4j>
    <version.log4j>1.2.17</version.log4j>
    <version.junit>4.11</version.junit>
    <version.mockito>1.9.5</version.mockito>
    <version.jwebunit>3.2</version.jwebunit>

    <!-- Commons IO -->
    <version.commons.io>2.4</version.commons.io>
    <version.commons.fileupload>1.3.1</version.commons.fileupload>
    <version.commons.lang>3.3.2</version.commons.lang>

    <!-- Spring -->
    <version.spring>4.0.6.RELEASE</version.spring>

  </properties>

  <build>
    <finalName>uploader</finalName>

    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
    </testResources>

    <!-- <directory>target</directory> <sourceDirectory>src/main/java</sourceDirectory> <outputDirectory>target/classes</outputDirectory> 
      <testSourceDirectory>src/test/java</testSourceDirectory> <testOutputDirectory>target/test-classes</testOutputDirectory> -->
    <plugins>
      <!-- Vesions - http://maven.apache.org/plugins/index.html -->
      <!-- Compiler plugin -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <debug>true</debug>
          <compilerVersion>${javac.source}</compilerVersion>
          <source>${javac.source}</source>
          <target>${javac.target}</target>
          <verbose>true</verbose>
          <fork>true</fork>
          <encoding>UTF-8</encoding>
          <executable>${java.home}/bin/javac</executable>
          <maxmem>1024m</maxmem>
        </configuration>
      </plugin>

      <!-- Unit Test Runner plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.17</version>
          </dependency>
        </dependencies>
        <configuration>
          <!-- Sets the VM argument line used when unit tests are run. -->
          <parallel>methods</parallel>
          <threadCount>3</threadCount>
          <includes>
            <include>**/*.class</include>
          </includes>
          <excludedGroups>com.codenoted.test.markers.IntegrationTest</excludedGroups>
        </configuration>
      </plugin>

      <!-- Code Coverage plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.1.201405082137</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


    </plugins>
  </build>

  <dependencies>

    <!-- Servlet API -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${version.servlet.api}</version>
      <scope>provided</scope>
    </dependency>

    <!-- JSP API -->
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${version.jsp.api}</version>
      <scope>provided</scope>
    </dependency>

    <!-- JSTL -->
    <dependency>
      <groupId>javax.servlet.jsp.jstl</groupId>
      <artifactId>jstl-api</artifactId>
      <version>${version.jsp.jstl}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${version.javax.validation}</version>
    </dependency>

    <!-- Taglibs -->
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>${version.taglibs}</version>
    </dependency>

    <!-- Simple Logging Facade for Java -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.slf4j}</version>
      <scope>compile</scope>
    </dependency>

    <!-- Log4j Adapter for SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${version.slf4j}</version>
      <scope>compile</scope>
    </dependency>

    <!-- Log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${version.log4j}</version>
      <scope>compile</scope>
    </dependency>

    <!-- JUnit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>

    <!-- Mockito -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${version.mockito}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>

    <!-- Spring testing with Junit -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${version.spring}</version>
      <scope>test</scope>
    </dependency>

    <!-- JWebunit -->
    <dependency>
      <groupId>net.sourceforge.jwebunit</groupId>
      <artifactId>jwebunit-htmlunit-plugin</artifactId>
      <version>${version.jwebunit}</version>
      <scope>test</scope>
    </dependency>

    <!-- Apache Commons - IO -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${version.commons.io}</version>
    </dependency>
    <!-- Apache Commons Upload -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${version.commons.fileupload}</version>
    </dependency>
    <!-- Apache Commons Lang -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${version.commons.lang}</version>
    </dependency>


    <!-- Spring -->
    <!-- Spring - Core utilities used by other modules - -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${version.spring}</version>
      <!-- Exclude Commons Logging in favor of SLF4j <exclusions> <exclusion> <groupId>commons-logging</groupId> <artifactId>commons-logging</artifactId> 
        </exclusion> </exclusions> -->
    </dependency>
    <!-- Spring - Expression Language (depends on spring-core) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - Bean Factory and JavaBeans utilities (depends on spring-core) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - AOP (depends on spring-core, spring-beans) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - Various Application Context utilities - EhCache, JavaMail, Quartz, Freemarker (depends on spring-core, 
      spring-expression, spring-aop, spring-beans, spring-instrument) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - TX Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - (ORM) integration with Hibernate, JPA (depends on spring-core, spring-beans, spring-context, spring-tx) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - Object-to-XML abstraction and integration with JAXB (depends on spring-core, spring-beans, spring-context) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - development of Servlet (depends on spring-core, spring-beans, spring-context) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${version.spring}</version>
    </dependency>
    <!-- Spring - MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${version.spring}</version>
    </dependency>

  </dependencies>

</project>
